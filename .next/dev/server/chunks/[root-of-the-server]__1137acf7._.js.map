{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///home/z/my-project/src/app/api/news/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\n\n// GitHub repository configuration\nconst GITHUB_CONFIG = {\n  owner: 'SMPITdaaruttarbiyah',\n  repo: 'smpit-dti-web',\n  branch: 'main',\n  filePath: 'assets/data/news.json'\n};\n\n// Cache duration in milliseconds (1 minute for faster updates)\nconst CACHE_DURATION = 1 * 60 * 1000;\nlet cachedData: any = null;\nlet lastFetch = 0;\n\nasync function fetchNewsFromGitHub() {\n  try {\n    const url = `https://api.github.com/repos/${GITHUB_CONFIG.owner}/${GITHUB_CONFIG.repo}/contents/${GITHUB_CONFIG.filePath}`;\n    \n    const response = await fetch(url, {\n      headers: {\n        'Accept': 'application/vnd.github.v3+json',\n        'User-Agent': 'SMPIT-DTI-Website'\n      },\n      next: { revalidate: 300 } // Cache for 5 minutes\n    });\n\n    if (!response.ok) {\n      if (response.status === 404) {\n        // File doesn't exist, return empty news\n        return {\n          version: '2.0.0',\n          lastUpdated: new Date().toISOString(),\n          website: 'SMPIT DAARUT TARBIYAH INDONESIA',\n          totalNews: 0,\n          news: [],\n          metadata: {\n            updatedAt: new Date().toISOString(),\n            updatedBy: 'System'\n          }\n        };\n      }\n      throw new Error(`GitHub API error: ${response.status}`);\n    }\n\n    const data = await response.json();\n    \n    // Decode base64 content\n    const content = Buffer.from(data.content, 'base64').toString('utf-8');\n    const newsData = JSON.parse(content);\n\n    // Transform data to match expected structure\n    const transformedData = {\n      version: newsData.version || '2.0.0',\n      lastUpdated: newsData.lastUpdated || new Date().toISOString(),\n      website: 'SMPIT DAARUT TARBIYAH INDONESIA',\n      totalNews: newsData.news ? newsData.news.length : 0,\n      news: newsData.news || [],\n      metadata: {\n        updatedAt: newsData.lastUpdated || new Date().toISOString(),\n        updatedBy: 'GitHub API'\n      }\n    };\n\n    return transformedData;\n  } catch (error) {\n    console.error('Error fetching news from GitHub:', error);\n    // Return empty data structure on error\n    return {\n      version: '2.0.0',\n      lastUpdated: new Date().toISOString(),\n      website: 'SMPIT DAARUT TARBIYAH INDONESIA',\n      totalNews: 0,\n      news: [],\n      metadata: {\n        updatedAt: new Date().toISOString(),\n        updatedBy: 'System',\n        error: 'Failed to fetch from GitHub'\n      }\n    };\n  }\n}\n\nexport async function GET(request: NextRequest) {\n  try {\n    const now = Date.now();\n    const { searchParams } = new URL(request.url);\n    const bypassCache = searchParams.get('bypassCache') === 'true';\n    \n    // Check if we have cached data that's still valid (unless bypassing cache)\n    if (!bypassCache && cachedData && (now - lastFetch) < CACHE_DURATION) {\n      console.log('Returning cached data');\n      return NextResponse.json(cachedData);\n    }\n\n    console.log(bypassCache ? 'Bypassing cache - fetching fresh data' : 'Fetching fresh data from GitHub');\n    // Fetch fresh data from GitHub\n    const newsData = await fetchNewsFromGitHub();\n    \n    // Update cache\n    cachedData = newsData;\n    lastFetch = now;\n\n    console.log('News data loaded:', {\n      totalNews: newsData.totalNews,\n      lastUpdated: newsData.lastUpdated\n    });\n\n    return NextResponse.json(newsData);\n  } catch (error) {\n    console.error('API Error:', error);\n    return NextResponse.json(\n      { \n        error: 'Failed to fetch news',\n        news: [],\n        totalNews: 0,\n        version: '2.0.0',\n        lastUpdated: new Date().toISOString()\n      },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    \n    // This endpoint would be used by the admin panel to save news\n    // For now, we'll just return success\n    // In a real implementation, you might want to validate and save to a database\n    \n    console.log('Received news data:', body);\n    \n    return NextResponse.json({ \n      success: true, \n      message: 'News data received successfully',\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    console.error('POST Error:', error);\n    return NextResponse.json(\n      { \n        error: 'Failed to process news data',\n        success: false\n      },\n      { status: 500 }\n    );\n  }\n}"],"names":[],"mappings":"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","debugId":null}}]
}